"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   agentsService: function() { return /* binding */ agentsService; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nconst API_BASE_URL = \"http://localhost:8002\" || 0;\n// Create axios instance with default config\nconst REQUEST_TIMEOUT = Number(process.env.NEXT_PUBLIC_API_TIMEOUT_MS || 90000);\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    timeout: REQUEST_TIMEOUT,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Response interceptor for error handling\napi.interceptors.response.use((response)=>response, (error)=>{\n    console.error(\"API Error:\", error);\n    return Promise.reject(error);\n});\nconst agentsService = {\n    // Get all available agents\n    async getAgents () {\n        try {\n            const response = await api.get(\"/api/agents/status\");\n            // Transform backend agent data to frontend format\n            const agents = Object.entries(response.data.agents).map((param)=>{\n                let [key, agent] = param;\n                return {\n                    id: key,\n                    name: agent.name,\n                    description: agent.description,\n                    status: agent.status === \"online\" ? \"online\" : \"offline\",\n                    specialty: getSpecialtyFromCapabilities(agent.capabilities),\n                    actionLabel: getActionLabel(key),\n                    resultType: getResultType(key)\n                };\n            });\n            return agents;\n        } catch (error) {\n            console.error(\"Failed to fetch agents:\", error);\n            // Return default agents if API fails\n            return getDefaultAgents();\n        }\n    },\n    // Ryu Agent - Token Analysis\n    async analyzeToken (symbol) {\n        try {\n            var _data_entry_levels, _data_entry_levels1, _data_entry_levels2, _data_entry_levels3, _data_entry_levels4, _data_entry_levels5, _data_entry_levels6, _data_technical_analysis_rsi_14, _data_technical_analysis, _data_technical_analysis_macd_line, _data_technical_analysis1, _data_technical_analysis2, _data_scores, _data_scores1, _data_scores2, _data_scores3, _data_scores4;\n            console.log(\"\\uD83D\\uDD0D Requesting Ryu analysis for \".concat(symbol, \"...\"));\n            const response = await api.post(\"/api/agents/ryu/analyze\", {\n                symbol: symbol.toUpperCase(),\n                analysis_type: \"comprehensive\"\n            });\n            const data = response.data;\n            console.log(\"✅ Ryu analysis completed for \".concat(symbol));\n            return {\n                symbol: data.symbol,\n                action: data.recommendation || \"HOLD\",\n                confidence: data.confidence || 0.5,\n                currentPrice: data.current_price || 0,\n                entryRange: {\n                    min: ((_data_entry_levels = data.entry_levels) === null || _data_entry_levels === void 0 ? void 0 : _data_entry_levels.entry_range_low) || 0,\n                    max: ((_data_entry_levels1 = data.entry_levels) === null || _data_entry_levels1 === void 0 ? void 0 : _data_entry_levels1.entry_range_high) || 0\n                },\n                targets: {\n                    target1: ((_data_entry_levels2 = data.entry_levels) === null || _data_entry_levels2 === void 0 ? void 0 : _data_entry_levels2.target_1) || 0,\n                    target2: (_data_entry_levels3 = data.entry_levels) === null || _data_entry_levels3 === void 0 ? void 0 : _data_entry_levels3.target_2,\n                    target3: undefined\n                },\n                stopLoss: ((_data_entry_levels4 = data.entry_levels) === null || _data_entry_levels4 === void 0 ? void 0 : _data_entry_levels4.stop_loss) || 0,\n                riskRewardRatio: calculateRiskReward(data.current_price, (_data_entry_levels5 = data.entry_levels) === null || _data_entry_levels5 === void 0 ? void 0 : _data_entry_levels5.target_1, (_data_entry_levels6 = data.entry_levels) === null || _data_entry_levels6 === void 0 ? void 0 : _data_entry_levels6.stop_loss, data.recommendation),\n                analysis: {\n                    technical: \"RSI: \".concat(((_data_technical_analysis = data.technical_analysis) === null || _data_technical_analysis === void 0 ? void 0 : (_data_technical_analysis_rsi_14 = _data_technical_analysis.rsi_14) === null || _data_technical_analysis_rsi_14 === void 0 ? void 0 : _data_technical_analysis_rsi_14.toFixed(1)) || \"N/A\", \", MACD: \").concat(((_data_technical_analysis1 = data.technical_analysis) === null || _data_technical_analysis1 === void 0 ? void 0 : (_data_technical_analysis_macd_line = _data_technical_analysis1.macd_line) === null || _data_technical_analysis_macd_line === void 0 ? void 0 : _data_technical_analysis_macd_line.toFixed(4)) || \"N/A\", \", Trend: \").concat(((_data_technical_analysis2 = data.technical_analysis) === null || _data_technical_analysis2 === void 0 ? void 0 : _data_technical_analysis2.trend) || \"Unknown\"),\n                    fundamental: \"Market cap analysis and volume assessment completed\",\n                    sentiment: \"Market sentiment: \".concat(data.risk_assessment || \"Neutral\"),\n                    risk: \"Risk Level: \".concat(data.risk_assessment || \"Medium\")\n                },\n                scores: {\n                    technical: ((_data_scores = data.scores) === null || _data_scores === void 0 ? void 0 : _data_scores.technical) || 75,\n                    fundamental: ((_data_scores1 = data.scores) === null || _data_scores1 === void 0 ? void 0 : _data_scores1.overall) * 0.8 || 70,\n                    momentum: ((_data_scores2 = data.scores) === null || _data_scores2 === void 0 ? void 0 : _data_scores2.momentum) || 65,\n                    sentiment: ((_data_scores3 = data.scores) === null || _data_scores3 === void 0 ? void 0 : _data_scores3.volume) * 0.7 || 60,\n                    overall: ((_data_scores4 = data.scores) === null || _data_scores4 === void 0 ? void 0 : _data_scores4.overall) || 68\n                },\n                timestamp: data.timestamp || new Date().toISOString()\n            };\n        } catch (error) {\n            var _error_response, _error_response_data, _error_response1, _error_response_data1, _error_response2;\n            console.error(\"Token analysis failed:\", error);\n            // Handle specific API errors more gracefully\n            if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 404 && ((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : (_error_response_data = _error_response1.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.detail)) {\n                // Extract the meaningful error message from 404 responses\n                throw new Error(error.response.data.detail);\n            } else if ((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : (_error_response_data1 = _error_response2.data) === null || _error_response_data1 === void 0 ? void 0 : _error_response_data1.detail) {\n                // Handle other API errors with detail messages\n                throw new Error(error.response.data.detail);\n            } else {\n                // Fallback for network or other errors\n                throw new Error(\"Failed to analyze \".concat(symbol, \": \").concat(error instanceof Error ? error.message : \"Network Error\"));\n            }\n        }\n    },\n    // Yuki Agent - Trade Scanner\n    async scanTrades () {\n        try {\n            console.log(\"⚡ Requesting Yuki trade scan...\");\n            const response = await api.post(\"/api/agents/yuki/scan\", {\n                scan_type: \"opportunities\",\n                pairs_limit: 500\n            });\n            const data = response.data;\n            console.log(\"✅ Yuki scan completed: \".concat(data.opportunities_found, \" opportunities found\"));\n            return {\n                opportunities: data.opportunities.map((opp)=>({\n                        id: opp.id,\n                        symbol: opp.symbol,\n                        direction: opp.direction,\n                        confidence: opp.confidence,\n                        entryPrice: opp.entry_price,\n                        target1: opp.target_1,\n                        target2: opp.target_2,\n                        stopLoss: opp.stop_loss,\n                        riskRewardRatio: opp.risk_reward_ratio,\n                        timeHorizon: opp.time_horizon,\n                        reasoning: opp.reasoning,\n                        keyFactors: opp.key_factors || [],\n                        expiresAt: opp.expires_at\n                    })),\n                totalScanned: data.total_scanned || 500,\n                bestOpportunity: data.opportunities[0] || null,\n                marketCondition: data.market_condition || \"Analyzed\",\n                timestamp: data.timestamp || new Date().toISOString()\n            };\n        } catch (error) {\n            console.error(\"Trade scanning failed:\", error);\n            throw new Error(\"Failed to scan trades: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n        }\n    },\n    // Sakura Agent - Yield Opportunities\n    async getYieldOpportunities () {\n        try {\n            var _data_portfolio_recommendation_allocation, _data_portfolio_recommendation, _data_portfolio_recommendation1, _data_portfolio_recommendation2;\n            console.log(\"\\uD83C\\uDF38 Requesting Sakura yield analysis...\");\n            const response = await api.post(\"/api/agents/sakura/yield\", {\n                analysis_type: \"yield_farming\",\n                risk_preference: \"conservative\"\n            });\n            const data = response.data;\n            console.log(\"✅ Sakura analysis completed: \".concat(data.opportunities.length, \" yield opportunities found\"));\n            return {\n                opportunities: data.opportunities.map((opp)=>({\n                        id: opp.id,\n                        protocol: opp.protocol,\n                        asset: opp.asset,\n                        apy: opp.apy,\n                        tvl: opp.tvl,\n                        riskLevel: opp.risk_level,\n                        maturity: opp.maturity,\n                        minimumDeposit: opp.minimum_deposit,\n                        strategy: opp.strategy,\n                        projectedReturns: opp.projected_returns\n                    })),\n                totalTvlAnalyzed: data.total_tvl_analyzed || 0,\n                bestOpportunity: data.opportunities[0] || null,\n                portfolioRecommendation: {\n                    allocation: ((_data_portfolio_recommendation = data.portfolio_recommendation) === null || _data_portfolio_recommendation === void 0 ? void 0 : (_data_portfolio_recommendation_allocation = _data_portfolio_recommendation.allocation) === null || _data_portfolio_recommendation_allocation === void 0 ? void 0 : _data_portfolio_recommendation_allocation.map((alloc)=>({\n                            opportunity: {\n                                id: alloc.protocol.toLowerCase(),\n                                protocol: alloc.protocol,\n                                asset: \"Multi\",\n                                apy: alloc.apy_contribution * (100 / alloc.percentage),\n                                tvl: 0,\n                                riskLevel: \"LOW\",\n                                minimumDeposit: 100,\n                                strategy: \"Portfolio Allocation\",\n                                projectedReturns: {\n                                    monthly: alloc.apy_contribution / 12,\n                                    quarterly: alloc.apy_contribution / 4,\n                                    yearly: alloc.apy_contribution\n                                }\n                            },\n                            percentage: alloc.percentage\n                        }))) || [],\n                    totalProjectedApy: ((_data_portfolio_recommendation1 = data.portfolio_recommendation) === null || _data_portfolio_recommendation1 === void 0 ? void 0 : _data_portfolio_recommendation1.total_projected_apy) || 0,\n                    riskScore: ((_data_portfolio_recommendation2 = data.portfolio_recommendation) === null || _data_portfolio_recommendation2 === void 0 ? void 0 : _data_portfolio_recommendation2.risk_score) || 0.25\n                },\n                timestamp: data.timestamp || new Date().toISOString()\n            };\n        } catch (error) {\n            console.error(\"Yield analysis failed:\", error);\n            throw new Error(\"Failed to get yield opportunities: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n        }\n    },\n    // Get integration status\n    async getStatus () {\n        try {\n            const response = await api.get(\"/api/agents/status\");\n            return response.data;\n        } catch (error) {\n            console.error(\"Failed to get status:\", error);\n            return null;\n        }\n    }\n};\n// Helper functions\nfunction getSpecialtyFromCapabilities(capabilities) {\n    if (capabilities.includes(\"token_analysis\")) return \"Token Analysis\";\n    if (capabilities.includes(\"market_scanning\")) return \"Trade Scanner\";\n    if (capabilities.includes(\"yield_optimization\")) return \"Yield Farming\";\n    return \"AI Analysis\";\n}\nfunction getActionLabel(agentId) {\n    switch(agentId){\n        case \"ryu\":\n            return \"Analyze Token\";\n        case \"yuki\":\n            return \"Find Trades\";\n        case \"sakura\":\n            return \"Get Yield Opportunities\";\n        default:\n            return \"Execute\";\n    }\n}\nfunction getResultType(agentId) {\n    switch(agentId){\n        case \"ryu\":\n            return \"AI Token Analysis Report\";\n        case \"yuki\":\n            return \"Market Opportunities\";\n        case \"sakura\":\n            return \"DeFi Yield Options\";\n        default:\n            return \"Analysis Results\";\n    }\n}\nfunction getDefaultAgents() {\n    return [\n        {\n            id: \"ryu\",\n            name: \"Ryu Agent\",\n            description: \"Professional token analysis with comprehensive AI scoring and risk assessment.\",\n            status: \"online\",\n            specialty: \"Token Analysis\",\n            actionLabel: \"Analyze Token\",\n            resultType: \"AI Token Analysis Report\"\n        },\n        {\n            id: \"yuki\",\n            name: \"Yuki Agent\",\n            description: \"Advanced trade scanner for high-frequency opportunities across 500+ trading pairs.\",\n            status: \"online\",\n            specialty: \"Trade Scanner\",\n            actionLabel: \"Find Trades\",\n            resultType: \"Market Opportunities\"\n        },\n        {\n            id: \"sakura\",\n            name: \"Sakura Agent\",\n            description: \"Conservative DeFi yield farming with Pendle integration and risk-adjusted returns.\",\n            status: \"online\",\n            specialty: \"Yield Farming\",\n            actionLabel: \"Get Yield Opportunities\",\n            resultType: \"DeFi Yield Options\"\n        }\n    ];\n}\nfunction calculateRiskReward(entry, target, stop, direction) {\n    try {\n        if (!entry || !target || !stop) return 0;\n        let reward;\n        let risk;\n        if (direction === \"LONG\") {\n            reward = target - entry;\n            risk = entry - stop;\n        } else {\n            reward = entry - target;\n            risk = stop - entry;\n        }\n        if (risk <= 0) return 0;\n        return reward / risk;\n    } catch (e) {\n        return 0;\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/api.ts\n"));

/***/ })

});